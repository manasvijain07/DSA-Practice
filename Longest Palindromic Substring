Given a string s, return the longest palindromic substring in s.

 

Example 1:

Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.
Example 2:

Input: s = "cbbd"
Output: "bb"
 

Constraints:

1 <= s.length <= 1000
s consist of only digits and English letters.

-----------------------------------------------------

Solution 1 - TC - O(n ^ 2) SC - O(1)

//https://www.youtube.com/watch?v=AKIHWGumagI
// https://www.youtube.com/watch?v=DK5OKKbF6GI  --> actual sol

class Solution {
    int startIndex = 0, len = 0;
    
    public String longestPalindrome(String s) {
        if(s.length() < 2)
            return s;
        
        for(int i = 0; i < s.length(); i++)
        {
            expand(s, i, i + 1);
            expand(s, i, i);
        }
        
        return s.substring(startIndex, startIndex + len);
    }
    
    public void expand(String s, int start, int end)
    {
        while(start >= 0 && end < s.length() && s.charAt(start) == s.charAt(end))
        {
            start--;
            end++;
        }
        
        if(len < end - start - 1)
        {
            startIndex = start + 1;
            len = end - start - 1;
        }
    }
}

