Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:


 

Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
Example 2:

Input: numRows = 1
Output: [[1]]
 

Constraints:

1 <= numRows <= 30

-------------------------------------------

Solution 1 - TC - O(n ^ 2) SC - O(1)

List<List<Integer>> res = new ArrayList<>();
        
        res.add(new ArrayList(Arrays.asList(1)));
        
        for(int i = 1; i < numRows; i++)
        {
           // i + 1 total terms
            ArrayList<Integer> list = new ArrayList();
            
            for(int j = 0; j <= i; j++)
            {
                if(j == 0 || j == i)
                {
                    list.add(1);
                }
                else
                {
                    list.add(res.get(i - 1).get(j - 1) + res.get(i - 1).get(j));
                }
            }
            res.add(list);
        }
        return res;
    }
