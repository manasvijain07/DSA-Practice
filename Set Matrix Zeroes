Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.

You must do it in place.

 

Example 1:


Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]
Output: [[1,0,1],[0,0,0],[1,0,1]]
Example 2:


Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]
 

Constraints:

m == matrix.length
n == matrix[0].length
1 <= m, n <= 200
-231 <= matrix[i][j] <= 231 - 1
 

Follow up:

A straightforward solution using O(mn) space is probably a bad idea.
A simple improvement uses O(m + n) space, but still not the best solution.
Could you devise a constant space solution?


-----------------------------------------------------

Solution 1 - TC - O(m * n) SC - O(1)


class Solution {
    public void setZeroes(int[][] matrix) {
        // find zero location
        List<List<Integer>> list = new ArrayList<>();
        
        for(int i = 0; i < matrix.length; i++)
        {
            for(int j = 0; j < matrix[0].length; j++)
            {
                if(matrix[i][j] == 0)
                {
                    list.add(new ArrayList(Arrays.asList(i, j)));
                }
            }
        }
        
        for(List<Integer> l : list)
        {
            int row = l.get(0);
            int col = l.get(1);
            
            for(int i = 0; i < matrix[0].length; i++)
            {
                matrix[row][i] = 0;
            }
            
            for(int j = 0; j < matrix.length; j++)
            {
                matrix[j][col] = 0;
            }
        }
    }
}


----------------------------------------------------

Solution 2 - Tc - O(m * n) SC - O(1)

class Solution {
    public void setZeroes(int[][] matrix) {
        boolean isCol = false, isRow = false;
        int R = matrix.length, C = matrix[0].length;
        
        // set isCol to true if col = 0
        for(int i=0; i<matrix.length; i++){
            if(matrix[i][0] == 0){
                isCol = true;
                break;
            }
        }
        
         // set isRow to true if row = 0
        for(int i=0; i<matrix[0].length; i++){
            if(matrix[0][i] == 0){
                isRow = true;
                break;
            }
        }
        
         // set 1st row and 1st col to zero in case of any zeros in matrix
        for(int i=1; i<matrix.length; i++){
            for(int j=1; j<matrix[i].length; j++){
                if(matrix[i][j] == 0){
                    matrix[0][j] = 0;
                    matrix[i][0] = 0;
                }
            }
        }
        
        // set other rows and col to 0 if 1st row and 1st col are 0
        
        for(int i = 1; i < R; i++)
        {
            for(int j = 1; j < C; j++)
            {
                if(matrix[i][0] == 0 || matrix[0][j] == 0)
                {
                    matrix[i][j] = 0;
                }
            }
        }
        
        // if isRow, set first row to zero
        if(isRow)
        {
            for(int j = 0; j < C; j++)
            {
                matrix[0][j] = 0;
            }
        }
        
        // if isCol, set 1st col = 0
        if(isCol)
        {
            for(int i = 0; i < R; i++)
            {
                matrix[i][0] = 0;
            }
        }
    }
}
